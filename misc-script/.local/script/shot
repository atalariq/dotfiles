#!/usr/bin/env bash
# vim: ft=sh: sw=4: ts=4:
# shellcheck disable=SC2091

SCREENSHOT_DIR="$HOME/Pictures/Screenshots"
FINAL="$SCREENSHOT_DIR/$(date +%Y%m%d-%H%M%S)-shot.png"
TMP_DIR="/tmp"
TMP_FILE="$TMP_DIR/image"
IMG_EXT="png"
TMP_IMG="$TMP_FILE.$IMG_EXT"

DMENU="rofi -dmenu -i -p Screenshot -lines 6 -width 20"
max_history=5

shadow_size="80x5+0+0"
rounded_corner=0
background_size=12
background_color="#ffffff"
color_profile="/usr/share/color/icc/colord/sRGB.icc"

if [ ! -d "$SCREENSHOT_DIR" ]; then
    mkdir -p "$SCREENSHOT_DIR"
fi

_clean() {
    if [ -f $TMP_IMG ]; then
        # /usr/bin/rm "$TMP_IMG"
        /usr/bin/mv $TMP_IMG "${TMP_FILE}-$(date '+%H%M%S').${IMG_EXT}"

        if [ "$(ls $TMP_DIR/*.${IMG_EXT}  >$TMP_DIR/total-image && wc -l <$TMP_DIR/total-image)" = "$max_history" ]; then
            /usr/bin/rm "${TMP_DIR}/*.${IMG_EXT}"
            /usr/bin/rm $TMP_DIR/total-image
        fi
    fi
}

_parse() {
    IMG=${1:-$TMP_IMG}

    # Set rounded corner
    convert $IMG \
        \( +clone -alpha extract -draw 'fill black polygon 0,0 0,'"${rounded_corner}"' '"${rounded_corner}"',0 fill white circle '"${rounded_corner}"','"${rounded_corner}"' '"${rounded_corner}"',0' \
        \( +clone -flip \) -compose Multiply -composite \
        \( +clone -flop \) -compose Multiply -composite \
        \) \
        -alpha off \
        -compose CopyOpacity -composite -compose over \
        $IMG

    # Set image shadow
    convert $IMG \
        \( +clone -background black \
        -shadow ${shadow_size} \) +swap -background none \
        -layers merge +repage $IMG

    # Set image border
    convert $IMG \
        -bordercolor ${background_color} \
        -border ${background_size} \
        $IMG

    # Set image profile
    convert $IMG -profile ${color_profile} $IMG

}

shot() {
    _clean
    case $1 in
        full) grimblast save output $TMP_IMG ;;
        select) grimblast save area $TMP_IMG  ;;
    esac

    [ $PARSE == true ] && _parse $TMP_IMG

    cp $TMP_IMG $FINAL
    wl-copy -t image/png < $FINAL
    notify-send --app-name=screenshot -i "$FINAL" "Shot" "Screenshot Acquired"

}

interactive() {
    OPTIONS='''
    [
        ["Fullscreen",              "shot full"],
        ["Select",                  "shot select"]
    ]
    '''
    menu=$(echo "$OPTIONS" | jq -r ".[][0]" | $DMENU)
    $(echo "$OPTIONS" | jq -r ".[] | select(.[0] == \"$menu\") | .[1]")
}

PARSE=true

OPT=${1:-interactive}
case $OPT in
    full       ) shot full ;;
    select     ) shot select ;;
    default    ) PARSE=false shot select ;;
    interactive) interactive ;;
    parse      )
        shift;
        IMG=$1
        if [ -f $IMG ]; then
            cp "$IMG" "$IMG.backup"
            _parse $IMG
        fi
        notify-send --app-name=screenshot -i "$IMG" "Shot" "Parse image"
        ;;
    *) interactive ;;
esac
